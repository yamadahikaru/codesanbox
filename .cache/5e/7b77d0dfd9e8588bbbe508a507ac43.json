{"id":"src/index.js","dependencies":[{"name":"/project/codesanbox/package.json","includedInParent":true,"mtime":1674526631980}],"generated":{"js":"// /*\n// const,let等の変数宣言\n// */\n\n// var vall = \"var変数\";\n// console.log(vall);\n\n// // var変数這は上書き可能\n\n// vall = \"var変数を上書き\";\n// console.log(vall);\n\n// //var変数は再宣言可能\n\n// var vall = \"var変数を再宣言\";\n// console.log(vall);\n\n// let val2 = 'let変数';\n// console.log(val2);\n\n// val2 = 'let変数を上書き';\n// console.log(val2);\n\n// let破砕宣言不可\n// let val2 = 'let変数を再宣言';\n\n// const  val3 = 'const変数';\n// console.log(val3);\n\n// coｎst変数は上書き不可\n// val3 = \"const変数を上書き\";\n// const val3 = \"constを再宣言\";\n\n// const val4 = {\n//   name : \"じゃけ\",\n//   age : 24,\n// };\n// constで定義したオブジェクトはプロパティの変更が可能\n// console.log(val4);\n\n// val4.name= \"jyak\" ;\n// console.log(val4);\n\n// val4.address = \"hiroshima\";\n// console.log(val4);\n\n// constで定義したオブジェクトはプロパティの変更が可能。基本const使用\n\n// const val5 = ['doc','cat'];\n// val5[0] = \"bird\";\n// val5.push(\"monkey\");\n// console.log(val5);\n\n// テンプレート文字列\n// const named = \"じゃけぇ\";\n// const age = 28;\n\n// const message1 = `私の名前は${named}です。年齢は${age}歳です。`;\n// console.log(message1);\n\n// アロー関数\n\n// 従来の関数\n// function func1(str) {\n//     return str;\n// }\n\n// const func1 = function (str) {\n//   return str;\n// };\n\n// console.log(func1(\"テキスト\"));\n\n// // アロー関数\n// const func2 = (str) => {\n//     return str;\n// };\n// console.log(func2(\"func2です\"));\n\n// const func3 = (num1,num2) => {\n//     return num1 + num2 ;\n// }\n// console.log(func3(2,3));\n\n// 分割代入\n// const myProfile = {\n//   named: \"ひかる\",\n//   age: 29,\n// };\n// const message1 = `名前は${myProfile.named}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n\n// const { named, age } = myProfile;\n// const message2 = `名前は${named}です。年齢は${age}です。`;\n// console.log(message2);\n\n// const myProfile = [\"ひかる\", 29];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [named, age] = myProfile;\n// const message4 = `名前は${namedf}です。年齢は${age}です。`;\n// console.log(message4);\n\n// デフォルト値（初期値）\n\n// const sayHello = (name = \"ゲスト\") => console.log(`こんにちは${name}さん!`);\n// sayHello('ひかる');\n\n// スプレッド構文...\n// 配列の展開\n// const arr1 =[1,2,3];\n// // console.log(arr1);\n// // console.log(...arr1);\n// // 中身を順番に出して処理する\n\n// const sumFunc = (num1 ,num2) => console.log(num1 + num2);\n// sumFunc(arr1[0],arr1[1]);\n// sumFunc(...arr1);\n\n// まとめる\n// const arr2 = [1, 2, 3, 4, 5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(num1);\n// console.log(num2);\n// console.log(arr3);\n\n// 配列のコピーや結合\n// const arr4 = [10, 20];\n// const arr5 = [30, 40];\n\n// const arr6 = [...arr4];\n// arr6[0] = 100;\n// console.log(arr6);\n// console.log(arr4);\n\n// const arr7 = [...arr4 , ...arr5];\n// console.log(arr7);\n\n// const arr8 = arr4;\n// console.log(arr8);\n\n// arr8[0] = 100;\n// console.log(arr8);\n// console.log(arr4);\n\n// mapやfilterを使った配列の処理\n// const nameArr = [\"田中\", \"山田\", \"林\"];\n// for(let index = 0 ; index < nameArr.length; index++){\n//     console.log(`${index + 1}番目は${nameArr[index]}です`);\n// }\n\n// const nameArr2 = nameArr.map((name)=>{\n//     return name;\n// })\n// console.log(nameArr2);\n\n// nameArr.map((name , index )=>console.log(`${index + 1 }番目は${name}です`));\n\n// filter\n// const numArr = [1, 2, 3, 4, 5];\n// const newNumArr = numArr.filter((num) => {\n//   return num % 2 === 1;\n// });\n\n// console.log(newNumArr);\n\n// const newNameArr = nameArr.map((name) => {\n//   if (name === \"山田\") {\n//     return name;\n//   } else {\n//     return `${name}さん`;\n//   }\n// });\n// console.log(newNameArr);\n\n// 三項演算子\n// ある条件 ? 条件がtrueのとき : 条件がfalseのとき\n// const val1 = 1 < 0 ? \"trueです\" : \"falseです\";\n// console.log(val1);\n\n// const num = 1300;\n// // console.log(num.toLocaleString());\n\n// const formattedNum =\n//   typeof num == \"number\" ? num.toLocaleString() : \"数値を入力してください\";\n// console.log(formattedNum);\n\n// const checkSum = (num1, num2) => {\n//   return num1 + num2 > 100 ? '100を超えています' : \"許容範囲内です\";\n// };\n\n// console.log(checkSum(20, 500));\n\n// 論理演算子の本当の意味を知ろう　&& ||\n// const flag1 = true;\n// const flag2 = false;\n// if (flag1 || flag2) {\n//     console.log('1か2はTrueになります');\n// }\n// if (flag1 && flag2) {\n//     console.log('1も2もTrueになります');\n// }\n\n// ||の左側がfalseなら右側を返す。左側がtrueなら左側を返す\n// const num = null;\n// const fee = num || \"金額未設定です\";\n// console.log(fee);\n\n// &&は左側がtrueなら右側を返す\n// const num2 = null;\n// const fee2 = num2 && \"なにか設定されました\";\n// console.log(fee2);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"src/index.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"src/index.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":11,"column":0}},{"generated":{"line":13,"column":0},"source":"src/index.js","original":{"line":13,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":27,"column":0}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":28,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":30,"column":0}},{"generated":{"line":31,"column":0},"source":"src/index.js","original":{"line":31,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":34,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":36,"column":0},"source":"src/index.js","original":{"line":36,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":39,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":41,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":44,"column":0},"source":"src/index.js","original":{"line":44,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":45,"column":0}},{"generated":{"line":47,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":52,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":56,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":59,"column":0},"source":"src/index.js","original":{"line":59,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":61,"column":0}},{"generated":{"line":63,"column":0},"source":"src/index.js","original":{"line":63,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":64,"column":0}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":68,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":77,"column":0},"source":"src/index.js","original":{"line":77,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":80,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":81,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":85,"column":0},"source":"src/index.js","original":{"line":85,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":86,"column":0}},{"generated":{"line":87,"column":0},"source":"src/index.js","original":{"line":87,"column":0}},{"generated":{"line":88,"column":0},"source":"src/index.js","original":{"line":88,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":89,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":90,"column":0}},{"generated":{"line":91,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":93,"column":0},"source":"src/index.js","original":{"line":93,"column":0}},{"generated":{"line":94,"column":0},"source":"src/index.js","original":{"line":94,"column":0}},{"generated":{"line":95,"column":0},"source":"src/index.js","original":{"line":95,"column":0}},{"generated":{"line":97,"column":0},"source":"src/index.js","original":{"line":97,"column":0}},{"generated":{"line":99,"column":0},"source":"src/index.js","original":{"line":99,"column":0}},{"generated":{"line":100,"column":0},"source":"src/index.js","original":{"line":100,"column":0}},{"generated":{"line":102,"column":0},"source":"src/index.js","original":{"line":102,"column":0}},{"generated":{"line":103,"column":0},"source":"src/index.js","original":{"line":103,"column":0}},{"generated":{"line":104,"column":0},"source":"src/index.js","original":{"line":104,"column":0}},{"generated":{"line":106,"column":0},"source":"src/index.js","original":{"line":106,"column":0}},{"generated":{"line":108,"column":0},"source":"src/index.js","original":{"line":108,"column":0}},{"generated":{"line":109,"column":0},"source":"src/index.js","original":{"line":109,"column":0}},{"generated":{"line":111,"column":0},"source":"src/index.js","original":{"line":111,"column":0}},{"generated":{"line":112,"column":0},"source":"src/index.js","original":{"line":112,"column":0}},{"generated":{"line":113,"column":0},"source":"src/index.js","original":{"line":113,"column":0}},{"generated":{"line":114,"column":0},"source":"src/index.js","original":{"line":114,"column":0}},{"generated":{"line":115,"column":0},"source":"src/index.js","original":{"line":115,"column":0}},{"generated":{"line":116,"column":0},"source":"src/index.js","original":{"line":116,"column":0}},{"generated":{"line":118,"column":0},"source":"src/index.js","original":{"line":118,"column":0}},{"generated":{"line":119,"column":0},"source":"src/index.js","original":{"line":119,"column":0}},{"generated":{"line":120,"column":0},"source":"src/index.js","original":{"line":120,"column":0}},{"generated":{"line":122,"column":0},"source":"src/index.js","original":{"line":122,"column":0}},{"generated":{"line":123,"column":0},"source":"src/index.js","original":{"line":123,"column":0}},{"generated":{"line":124,"column":0},"source":"src/index.js","original":{"line":124,"column":0}},{"generated":{"line":125,"column":0},"source":"src/index.js","original":{"line":125,"column":0}},{"generated":{"line":126,"column":0},"source":"src/index.js","original":{"line":126,"column":0}},{"generated":{"line":127,"column":0},"source":"src/index.js","original":{"line":127,"column":0}},{"generated":{"line":129,"column":0},"source":"src/index.js","original":{"line":129,"column":0}},{"generated":{"line":130,"column":0},"source":"src/index.js","original":{"line":130,"column":0}},{"generated":{"line":131,"column":0},"source":"src/index.js","original":{"line":131,"column":0}},{"generated":{"line":133,"column":0},"source":"src/index.js","original":{"line":133,"column":0}},{"generated":{"line":134,"column":0},"source":"src/index.js","original":{"line":134,"column":0}},{"generated":{"line":135,"column":0},"source":"src/index.js","original":{"line":135,"column":0}},{"generated":{"line":136,"column":0},"source":"src/index.js","original":{"line":136,"column":0}},{"generated":{"line":138,"column":0},"source":"src/index.js","original":{"line":138,"column":0}},{"generated":{"line":139,"column":0},"source":"src/index.js","original":{"line":139,"column":0}},{"generated":{"line":141,"column":0},"source":"src/index.js","original":{"line":141,"column":0}},{"generated":{"line":142,"column":0},"source":"src/index.js","original":{"line":142,"column":0}},{"generated":{"line":144,"column":0},"source":"src/index.js","original":{"line":144,"column":0}},{"generated":{"line":145,"column":0},"source":"src/index.js","original":{"line":145,"column":0}},{"generated":{"line":146,"column":0},"source":"src/index.js","original":{"line":146,"column":0}},{"generated":{"line":148,"column":0},"source":"src/index.js","original":{"line":148,"column":0}},{"generated":{"line":149,"column":0},"source":"src/index.js","original":{"line":149,"column":0}},{"generated":{"line":150,"column":0},"source":"src/index.js","original":{"line":150,"column":0}},{"generated":{"line":151,"column":0},"source":"src/index.js","original":{"line":151,"column":0}},{"generated":{"line":152,"column":0},"source":"src/index.js","original":{"line":152,"column":0}},{"generated":{"line":154,"column":0},"source":"src/index.js","original":{"line":154,"column":0}},{"generated":{"line":155,"column":0},"source":"src/index.js","original":{"line":155,"column":0}},{"generated":{"line":156,"column":0},"source":"src/index.js","original":{"line":156,"column":0}},{"generated":{"line":157,"column":0},"source":"src/index.js","original":{"line":157,"column":0}},{"generated":{"line":159,"column":0},"source":"src/index.js","original":{"line":159,"column":0}},{"generated":{"line":161,"column":0},"source":"src/index.js","original":{"line":161,"column":0}},{"generated":{"line":162,"column":0},"source":"src/index.js","original":{"line":162,"column":0}},{"generated":{"line":163,"column":0},"source":"src/index.js","original":{"line":163,"column":0}},{"generated":{"line":164,"column":0},"source":"src/index.js","original":{"line":164,"column":0}},{"generated":{"line":165,"column":0},"source":"src/index.js","original":{"line":165,"column":0}},{"generated":{"line":167,"column":0},"source":"src/index.js","original":{"line":167,"column":0}},{"generated":{"line":169,"column":0},"source":"src/index.js","original":{"line":169,"column":0}},{"generated":{"line":170,"column":0},"source":"src/index.js","original":{"line":170,"column":0}},{"generated":{"line":171,"column":0},"source":"src/index.js","original":{"line":171,"column":0}},{"generated":{"line":172,"column":0},"source":"src/index.js","original":{"line":172,"column":0}},{"generated":{"line":173,"column":0},"source":"src/index.js","original":{"line":173,"column":0}},{"generated":{"line":174,"column":0},"source":"src/index.js","original":{"line":174,"column":0}},{"generated":{"line":175,"column":0},"source":"src/index.js","original":{"line":175,"column":0}},{"generated":{"line":176,"column":0},"source":"src/index.js","original":{"line":176,"column":0}},{"generated":{"line":178,"column":0},"source":"src/index.js","original":{"line":178,"column":0}},{"generated":{"line":179,"column":0},"source":"src/index.js","original":{"line":179,"column":0}},{"generated":{"line":180,"column":0},"source":"src/index.js","original":{"line":180,"column":0}},{"generated":{"line":181,"column":0},"source":"src/index.js","original":{"line":181,"column":0}},{"generated":{"line":183,"column":0},"source":"src/index.js","original":{"line":183,"column":0}},{"generated":{"line":184,"column":0},"source":"src/index.js","original":{"line":184,"column":0}},{"generated":{"line":186,"column":0},"source":"src/index.js","original":{"line":186,"column":0}},{"generated":{"line":187,"column":0},"source":"src/index.js","original":{"line":187,"column":0}},{"generated":{"line":188,"column":0},"source":"src/index.js","original":{"line":188,"column":0}},{"generated":{"line":190,"column":0},"source":"src/index.js","original":{"line":190,"column":0}},{"generated":{"line":191,"column":0},"source":"src/index.js","original":{"line":191,"column":0}},{"generated":{"line":192,"column":0},"source":"src/index.js","original":{"line":192,"column":0}},{"generated":{"line":194,"column":0},"source":"src/index.js","original":{"line":194,"column":0}},{"generated":{"line":196,"column":0},"source":"src/index.js","original":{"line":196,"column":0}},{"generated":{"line":197,"column":0},"source":"src/index.js","original":{"line":197,"column":0}},{"generated":{"line":198,"column":0},"source":"src/index.js","original":{"line":198,"column":0}},{"generated":{"line":199,"column":0},"source":"src/index.js","original":{"line":199,"column":0}},{"generated":{"line":200,"column":0},"source":"src/index.js","original":{"line":200,"column":0}},{"generated":{"line":201,"column":0},"source":"src/index.js","original":{"line":201,"column":0}},{"generated":{"line":202,"column":0},"source":"src/index.js","original":{"line":202,"column":0}},{"generated":{"line":203,"column":0},"source":"src/index.js","original":{"line":203,"column":0}},{"generated":{"line":204,"column":0},"source":"src/index.js","original":{"line":204,"column":0}},{"generated":{"line":206,"column":0},"source":"src/index.js","original":{"line":206,"column":0}},{"generated":{"line":207,"column":0},"source":"src/index.js","original":{"line":207,"column":0}},{"generated":{"line":208,"column":0},"source":"src/index.js","original":{"line":208,"column":0}},{"generated":{"line":209,"column":0},"source":"src/index.js","original":{"line":209,"column":0}},{"generated":{"line":211,"column":0},"source":"src/index.js","original":{"line":211,"column":0}},{"generated":{"line":212,"column":0},"source":"src/index.js","original":{"line":212,"column":0}},{"generated":{"line":213,"column":0},"source":"src/index.js","original":{"line":213,"column":0}},{"generated":{"line":214,"column":0},"source":"src/index.js","original":{"line":214,"column":0}}],"sources":{"src/index.js":"// /*\n// const,let等の変数宣言\n// */\n\n// var vall = \"var変数\";\n// console.log(vall);\n\n// // var変数這は上書き可能\n\n// vall = \"var変数を上書き\";\n// console.log(vall);\n\n// //var変数は再宣言可能\n\n// var vall = \"var変数を再宣言\";\n// console.log(vall);\n\n// let val2 = 'let変数';\n// console.log(val2);\n\n// val2 = 'let変数を上書き';\n// console.log(val2);\n\n// let破砕宣言不可\n// let val2 = 'let変数を再宣言';\n\n// const  val3 = 'const変数';\n// console.log(val3);\n\n// coｎst変数は上書き不可\n// val3 = \"const変数を上書き\";\n// const val3 = \"constを再宣言\";\n\n// const val4 = {\n//   name : \"じゃけ\",\n//   age : 24,\n// };\n// constで定義したオブジェクトはプロパティの変更が可能\n// console.log(val4);\n\n// val4.name= \"jyak\" ;\n// console.log(val4);\n\n// val4.address = \"hiroshima\";\n// console.log(val4);\n\n// constで定義したオブジェクトはプロパティの変更が可能。基本const使用\n\n// const val5 = ['doc','cat'];\n// val5[0] = \"bird\";\n// val5.push(\"monkey\");\n// console.log(val5);\n\n// テンプレート文字列\n// const named = \"じゃけぇ\";\n// const age = 28;\n\n// const message1 = `私の名前は${named}です。年齢は${age}歳です。`;\n// console.log(message1);\n\n// アロー関数\n\n// 従来の関数\n// function func1(str) {\n//     return str;\n// }\n\n// const func1 = function (str) {\n//   return str;\n// };\n\n// console.log(func1(\"テキスト\"));\n\n// // アロー関数\n// const func2 = (str) => {\n//     return str;\n// };\n// console.log(func2(\"func2です\"));\n\n// const func3 = (num1,num2) => {\n//     return num1 + num2 ;\n// }\n// console.log(func3(2,3));\n\n// 分割代入\n// const myProfile = {\n//   named: \"ひかる\",\n//   age: 29,\n// };\n// const message1 = `名前は${myProfile.named}です。年齢は${myProfile.age}です。`;\n// console.log(message1);\n\n// const { named, age } = myProfile;\n// const message2 = `名前は${named}です。年齢は${age}です。`;\n// console.log(message2);\n\n// const myProfile = [\"ひかる\", 29];\n\n// const message3 = `名前は${myProfile[0]}です。年齢は${myProfile[1]}です。`;\n// console.log(message3);\n\n// const [named, age] = myProfile;\n// const message4 = `名前は${namedf}です。年齢は${age}です。`;\n// console.log(message4);\n\n// デフォルト値（初期値）\n\n// const sayHello = (name = \"ゲスト\") => console.log(`こんにちは${name}さん!`);\n// sayHello('ひかる');\n\n// スプレッド構文...\n// 配列の展開\n// const arr1 =[1,2,3];\n// // console.log(arr1);\n// // console.log(...arr1);\n// // 中身を順番に出して処理する\n\n// const sumFunc = (num1 ,num2) => console.log(num1 + num2);\n// sumFunc(arr1[0],arr1[1]);\n// sumFunc(...arr1);\n\n// まとめる\n// const arr2 = [1, 2, 3, 4, 5];\n// const [num1, num2, ...arr3] = arr2;\n// console.log(num1);\n// console.log(num2);\n// console.log(arr3);\n\n// 配列のコピーや結合\n// const arr4 = [10, 20];\n// const arr5 = [30, 40];\n\n// const arr6 = [...arr4];\n// arr6[0] = 100;\n// console.log(arr6);\n// console.log(arr4);\n\n// const arr7 = [...arr4 , ...arr5];\n// console.log(arr7);\n\n// const arr8 = arr4;\n// console.log(arr8);\n\n// arr8[0] = 100;\n// console.log(arr8);\n// console.log(arr4);\n\n// mapやfilterを使った配列の処理\n// const nameArr = [\"田中\", \"山田\", \"林\"];\n// for(let index = 0 ; index < nameArr.length; index++){\n//     console.log(`${index + 1}番目は${nameArr[index]}です`);\n// }\n\n// const nameArr2 = nameArr.map((name)=>{\n//     return name;\n// })\n// console.log(nameArr2);\n\n// nameArr.map((name , index )=>console.log(`${index + 1 }番目は${name}です`));\n\n// filter\n// const numArr = [1, 2, 3, 4, 5];\n// const newNumArr = numArr.filter((num) => {\n//   return num % 2 === 1;\n// });\n\n// console.log(newNumArr);\n\n// const newNameArr = nameArr.map((name) => {\n//   if (name === \"山田\") {\n//     return name;\n//   } else {\n//     return `${name}さん`;\n//   }\n// });\n// console.log(newNameArr);\n\n// 三項演算子\n// ある条件 ? 条件がtrueのとき : 条件がfalseのとき\n// const val1 = 1 < 0 ? \"trueです\" : \"falseです\";\n// console.log(val1);\n\n// const num = 1300;\n// // console.log(num.toLocaleString());\n\n// const formattedNum =\n//   typeof num == \"number\" ? num.toLocaleString() : \"数値を入力してください\";\n// console.log(formattedNum);\n\n// const checkSum = (num1, num2) => {\n//   return num1 + num2 > 100 ? '100を超えています' : \"許容範囲内です\";\n// };\n\n// console.log(checkSum(20, 500));\n\n// 論理演算子の本当の意味を知ろう　&& ||\n// const flag1 = true;\n// const flag2 = false;\n// if (flag1 || flag2) {\n//     console.log('1か2はTrueになります');\n// }\n// if (flag1 && flag2) {\n//     console.log('1も2もTrueになります');\n// }\n\n// ||の左側がfalseなら右側を返す。左側がtrueなら左側を返す\n// const num = null;\n// const fee = num || \"金額未設定です\";\n// console.log(fee);\n\n// &&は左側がtrueなら右側を返す\n// const num2 = null;\n// const fee2 = num2 && \"なにか設定されました\";\n// console.log(fee2);\n"},"lineCount":null}},"error":null,"hash":"50f367f2ea5e3f46490853982ef63ade","cacheData":{"env":{}}}